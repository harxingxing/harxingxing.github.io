<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo项目迁移新机操作流程</title>
      <link href="/2020/07/04/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-04-hexo%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E6%96%B0%E6%9C%BA%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
      <url>/2020/07/04/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-04-hexo%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E6%96%B0%E6%9C%BA%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li>在github上添加本机秘钥</li><li>安装 <a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a> （如已安装请忽略）</li><li>找到项目克隆</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:名称/项目名.git</span><br></pre></td></tr></table></figure><ol start="4"><li><p>安装 <a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> (Node.js 版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本) （如已安装请忽略）</p></li><li><p>全局安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可前往 C:\Users\Administrator\AppData\Roaming\npm\node_modules 查看是否有 hexo-cli 目录</span></span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>npm安装项目需要的包,在项目根目录下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>可新建window命令行自启动服务方便程序开机启动,可查看《hexo日常操作》中的 window命令行自启动服务 小结</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到github并访问</title>
      <link href="/2020/07/02/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-02-hexo%E9%83%A8%E7%BD%B2%E5%88%B0github%E5%B9%B6%E8%AE%BF%E9%97%AE/"/>
      <url>/2020/07/02/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-02-hexo%E9%83%A8%E7%BD%B2%E5%88%B0github%E5%B9%B6%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>向json中添加元素</title>
      <link href="/2020/07/01/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-01-%E5%90%91json%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0/"/>
      <url>/2020/07/01/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-07-01-%E5%90%91json%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stu_info = &#123;<span class="attr">name</span>: <span class="string">'张三'</span>&#125;;</span><br><span class="line"><span class="comment">//向现有数组中添加一个元素</span></span><br><span class="line">stu_info.age = <span class="number">13</span>;</span><br><span class="line"><span class="comment">//再向现有数组中添加一个json元素</span></span><br><span class="line">stu_info.classes.name = <span class="string">'文科一班'</span>; <span class="comment">//错误的写法</span></span><br><span class="line">stu_info.classes = &#123;<span class="attr">name</span>: <span class="string">'文科一班'</span>&#125;; <span class="comment">//正确的写法</span></span><br></pre></td></tr></table></figure><blockquote><p> 参考： <a href="https://blog.csdn.net/junyu1024/article/details/80408841" target="_blank" rel="noopener">https://blog.csdn.net/junyu1024/article/details/80408841</a> </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thinkphp中where与whereOr混写的问题</title>
      <link href="/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-thinkphp%E4%B8%ADwhere%E4%B8%8EwhereOr%E6%B7%B7%E5%86%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-thinkphp%E4%B8%ADwhere%E4%B8%8EwhereOr%E6%B7%B7%E5%86%99%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;tp_user&#96; WHERE &#96;username&#96; &#x3D; 1 and (&#96;level&#96; &#x3D; 1 OR &#96;level&#96; &#x3D; 2)</span><br></pre></td></tr></table></figure><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遇到whereOr和where组合链式操作,统一写到闭包里面,会自动加上括号</span></span><br><span class="line">UserModel::where(<span class="function"><span class="keyword">function</span> <span class="params">($query)</span> <span class="title">use</span> <span class="params">($where)</span> </span>&#123;</span><br><span class="line">    $query-&gt;whereOr($where)</span><br><span class="line">&#125;)-&gt;select();</span><br></pre></td></tr></table></figure><h3 id="实际中的错误操作"><a href="#实际中的错误操作" class="headerlink" title="实际中的错误操作"></a>实际中的错误操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UserModel::where(<span class="string">'username'</span>,<span class="number">1</span>)</span><br><span class="line">    -&gt;whereOr([</span><br><span class="line">        [<span class="string">'level'</span>, <span class="string">'='</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="string">'level'</span>, <span class="string">'='</span>, <span class="number">2</span>]</span><br><span class="line">    ])-&gt;select();</span><br></pre></td></tr></table></figure><p>实际得到的语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM &#96;tp_user&#96; WHERE &#96;username&#96; &#x3D; 1 OR &#96;level&#96; &#x3D; 1 OR &#96;level&#96; &#x3D; 2</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.wodecun.com/blog/7987.html" target="_blank" rel="noopener">https://www.wodecun.com/blog/7987.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php获取本周、本月、本季度、半年、今年等常用日期</title>
      <link href="/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-php%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%91%A8%E3%80%81%E6%9C%AC%E6%9C%88%E3%80%81%E6%9C%AC%E5%AD%A3%E5%BA%A6%E3%80%81%E5%8D%8A%E5%B9%B4%E3%80%81%E4%BB%8A%E5%B9%B4%E7%AD%89%E5%B8%B8%E7%94%A8%E6%97%A5%E6%9C%9F/"/>
      <url>/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-php%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%91%A8%E3%80%81%E6%9C%AC%E6%9C%88%E3%80%81%E6%9C%AC%E5%AD%A3%E5%BA%A6%E3%80%81%E5%8D%8A%E5%B9%B4%E3%80%81%E4%BB%8A%E5%B9%B4%E7%AD%89%E5%B8%B8%E7%94%A8%E6%97%A5%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设今天是2020年6月23日</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本周，输出 2020-06-22 ~ 2020-06-28</span></span><br><span class="line">date(<span class="string">'Y-m-d'</span>, (time() - ((date(<span class="string">'w'</span>) == <span class="number">0</span> ? <span class="number">7</span> : date(<span class="string">'w'</span>)) - <span class="number">1</span>) * <span class="number">24</span> * <span class="number">3600</span>)) . <span class="string">' ~ '</span> . date(<span class="string">'Y-m-d'</span>, (time() - ((date(<span class="string">'w'</span>) == <span class="number">0</span> ? <span class="number">7</span> : date(<span class="string">'w'</span>)) - <span class="number">1</span>) * <span class="number">24</span> * <span class="number">3600</span>) + <span class="number">6</span> * <span class="number">24</span> * <span class="number">3600</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 本月，输出 2020-06-01 ~ 2020-06-30</span></span><br><span class="line">date(<span class="string">'Y-m-01'</span>) . <span class="string">' ~ '</span> . date(<span class="string">'Y-m-t'</span>)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 本季度，输出 2020-04-01 ~ 2020-06-30</span></span><br><span class="line">date(<span class="string">'Y-m-d'</span>, mktime(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, ceil((date(<span class="string">'n'</span>)) / <span class="number">3</span>) * <span class="number">3</span> - <span class="number">3</span> + <span class="number">1</span>, <span class="number">1</span>, date(<span class="string">'Y'</span>))) . <span class="string">' ~ '</span> . date(<span class="string">'Y-m-t'</span>, mktime(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, ceil((date(<span class="string">'n'</span>)) / <span class="number">3</span>) * <span class="number">3</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 半年，输出 2020-01-01 ~ 2020-06-30</span></span><br><span class="line">date(<span class="string">'Y-m-01'</span>, strtotime(<span class="string">'-5 month'</span>)) . <span class="string">' ~ '</span> . date(<span class="string">'Y-m-t'</span>, mktime(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, ceil((date(<span class="string">'n'</span>)) / <span class="number">3</span>) * <span class="number">3</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 今年，输出 2020-01-01 ~ 2020-12-31</span></span><br><span class="line">date(<span class="string">'Y-01-01'</span>) . <span class="string">' ~ '</span> . date(<span class="string">'Y-12-31'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日期 </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常见问题汇总</title>
      <link href="/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2020/06/23/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-23-git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="生成秘钥文件"><a href="#生成秘钥文件" class="headerlink" title="生成秘钥文件"></a>生成秘钥文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令行输入如下命令，然后根据提示操作，username为你git上的用户名</span></span><br><span class="line"><span class="comment"># window管理员用户默认生成的文件路径为 C:\Users\Administrator\.ssh</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"username"</span></span><br></pre></td></tr></table></figure><h3 id="github添加秘钥提示“-Key-is-already-in-use-”-即：key已经被占用"><a href="#github添加秘钥提示“-Key-is-already-in-use-”-即：key已经被占用" class="headerlink" title="github添加秘钥提示“ Key is already in use ”( 即：key已经被占用 )"></a>github添加秘钥提示“ Key is already in use ”( 即：key<strong>已经被占用</strong> )</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可使用如下命令来查找哪个地方使用了该键</span></span><br><span class="line">ssh -T -ai ~/.ssh/id_rsa git@github.com</span><br></pre></td></tr></table></figure><p>github有两处添加秘钥的地方,这两个地方key值不能相同</p><ol><li>Settings -&gt; SSH and GPG keys -&gt; New SSH key</li><li>某一仓库 -&gt; Settings -&gt; Secrets -&gt; New secret</li></ol><blockquote><p>参考： <a href="https://blog.csdn.net/m0_38072683/article/details/82939535" target="_blank" rel="noopener">https://blog.csdn.net/m0_38072683/article/details/82939535</a> </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo日常操作</title>
      <link href="/2020/06/22/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-22-hexo%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/06/22/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB-2020-06-22-hexo%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><h3 id="草稿文件"><a href="#草稿文件" class="headerlink" title="草稿文件"></a>草稿文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建草稿,保存路径 source/_drafts,名称不加日期</span></span><br><span class="line">hexo new draft &lt;title&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布草稿，移动文件到source/_posts,如设定有日期格式，会默认加上</span></span><br><span class="line">hexo publish &lt;要发布的草稿名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 预览草稿，启动服务时加上如下参数</span></span><br><span class="line">hexo server --draft</span><br></pre></td></tr></table></figure><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文章，保存路径 source/_posts</span></span><br><span class="line">hexo new &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line"><span class="comment"># 默认系统布局有三个post、page、draft，创建时会被保存到不同路径，自定义的其他布局和 post 相同。</span></span><br><span class="line"><span class="comment"># 可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</span></span><br></pre></td></tr></table></figure><h3 id="文件命名"><a href="#文件命名" class="headerlink" title="文件命名"></a>文件命名</h3><p>可通过编辑配置中的 <code>new_post_name</code>  更改，例如 :year-:month-:day-:title.md</p><blockquote><p>参考： <a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/writing</a> </p></blockquote><h2 id="开始书写"><a href="#开始书写" class="headerlink" title="开始书写"></a>开始书写</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#书写方式1(推荐，支持为文章添加多个分类)</span></span><br><span class="line">categories:</span><br><span class="line">- [分类1, 子分类1]</span><br><span class="line">- [分类2, 子分类2]</span><br><span class="line">- [分类3]</span><br><span class="line">- [分类4]</span><br><span class="line"></span><br><span class="line"><span class="comment">#书写方式2</span></span><br><span class="line">categories:</span><br><span class="line">- 书写方式1</span><br><span class="line">- 书写方式1子分类</span><br></pre></td></tr></table></figure><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标签</span></span><br><span class="line">tags:</span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br></pre></td></tr></table></figure><blockquote><p>参考： <a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/front-matter</a> </p></blockquote><h2 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h2><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认ip为0.0.0.0，端口为4000</span></span><br><span class="line">hexo server -i 192.168.1.1 -p 4500</span><br></pre></td></tr></table></figure><h3 id="静态模式"><a href="#静态模式" class="headerlink" title="静态模式"></a>静态模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先生成静态文件到 public 目录</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 再启动服务,这里服务器只处理 public 文件夹内的文件，而不会处理文件变动</span></span><br><span class="line">hexo server -s</span><br></pre></td></tr></table></figure><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>以  <a href="https://github.com/yelog/hexo-theme-3-hexo" target="_blank" rel="noopener">3-hexo</a> 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根目录下下载主题</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo</span><br><span class="line"><span class="comment"># 修改hexo根目录的_config.yml，如下</span></span><br><span class="line">theme: 3-hexo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后期更新</span></span><br><span class="line"><span class="built_in">cd</span> themes/3-hexo</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><blockquote><p>参考： <a href="https://github.com/yelog/hexo-theme-3-hexo" target="_blank" rel="noopener">https://github.com/yelog/hexo-theme-3-hexo</a> </p></blockquote><h2 id="window命令行自启动服务"><a href="#window命令行自启动服务" class="headerlink" title="window命令行自启动服务"></a>window命令行自启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建.bat后缀的批处理文件并输入如下内容</span></span><br><span class="line">d:</span><br><span class="line"><span class="built_in">cd</span> D:\项目根路径</span><br><span class="line">hexo server --draft</span><br><span class="line"><span class="comment">#  将文件放入window启动目录即可(win+r 打开运行，输入 shell:startup)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 常用 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
